{"version":3,"sources":["images/yoda.jpg","images/claire.jpg","images/magnetar_tools_page.png","images/mancala.png","images/seespotgo.png","images/telescopes.png","images/walter.png","images/blacksmith.png","images/summerson2.png","components/AboutMe.tsx","components/Contact.tsx","components/Projects.tsx","components/Video.tsx","components/Home.tsx","components/Header.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","AboutMe","className","style","display","justifyContent","flex","paddingLeft","paddingRight","href","target","rel","fontWeight","color","maxWidth","src","yoda","alt","border","borderRadius","Contact","fontSize","claire","useStyles","makeStyles","card","minWidth","margin","Projects","classes","flexWrap","Card","CardActionArea","CardMedia","component","max-width","image","summersong","title","CardContent","Typography","gutterBottom","variant","CardActions","Button","size","blacksmith","width","magnetar","mancala","walter","seespotgo","telescopes","Video","height","frameBorder","allow","allowFullScreen","Home","theme","createStyles","root","flexGrow","Header","AppBar","position","backgroundColor","Toolbar","props","to","particlesOptions","particles","number","value","density","enable","value_area","line_linked","App","exact","path","params","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.979d9293.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/yoda.2dff5d61.jpg\";","module.exports = __webpack_public_path__ + \"static/media/claire.21608779.jpg\";","module.exports = __webpack_public_path__ + \"static/media/magnetar_tools_page.f97af184.png\";","module.exports = __webpack_public_path__ + \"static/media/mancala.98c3c009.png\";","module.exports = __webpack_public_path__ + \"static/media/seespotgo.e67f8a71.png\";","module.exports = __webpack_public_path__ + \"static/media/telescopes.9c04c12b.png\";","module.exports = __webpack_public_path__ + \"static/media/walter.4230a9ca.png\";","module.exports = __webpack_public_path__ + \"static/media/blacksmith.94571b0c.png\";","module.exports = __webpack_public_path__ + \"static/media/summerson2.a249d4e6.png\";","import React from 'react';\n\nimport yoda from '../images/yoda.jpg';\n\nconst AboutMe: React.FC = () => {\n  \n  return (\n    <div>\n      <h1>About Me</h1>\n      <div className='component-div' style={{display: 'flex', justifyContent: 'space-around'}}>\n        <div style={{flex: 1, paddingLeft: '20px', paddingRight: '20px'}}>\n          <p>\n            I am a Technologist at <a href=\"https://blackcape.io/\"  target=\"_blank\" rel=\"noopener noreferrer\"style={{fontWeight: 'bold', color: 'white'}}>Black Cape</a>.\n            I work on creating API's in Python and corresponding user interfaces in React that\n            allow users to query data used for spatial analysis.\n            I completed my Master of Science in Computer Science (MSCS) from Georgia Tech in December 2021. \n            Previously I was a software engineer at General Dynamics (GDIT) and for Booz Allen Hamiltion.\n            The projects I worked on involved creating data pipelines to read, extract, and transform data so that \n            the user could visualize vital information about their operating environment.\n            I have a current Top Secret clearance and have worked on SCI programs.\n            Additionally, I am a certified AWS Solutions Architect, AWS Developer, and have my Security+ certification.  \n          </p>\n          <p>\n            I have experience working on both the frontend and backend of complex, distributed systems. \n            Most of my professional experience has involved working with Java, Python, C#, and JavaScript/TypeScript. \n            I also have used Python, C, and Go for academic and personal projects. \n            I highly value testing, automating workflows, and modularizing code to develop robust microservices \n            with containerization technologies. \n            I am particularly fond of working with large amounts of data, modeling it, and producing useful analytics.\n          </p> \n          <p>\n            I get to enjoy life with my wife Claire, a nurse in the Navy Nurse Corps, and our young \n            sons Ronan and Liam, as well as our two Boston Terriers, Bailey and Cali. In my free time\n            I enjoy reading to my sons, playing legos with them, hiking/camping, playing guitar, and boxing.\n            Oh and of course the hobby I am best at, wasting time on YouTube.\n          </p>\n        </div>\n        <div className='picture-div' style={{flex: 1, maxWidth: '50%'}}>\n            <img className='me-pic' src={yoda} alt='Yoda.' style={{ maxWidth: '50%', border: '2px solid whitesmoke', borderRadius: '10px'}}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AboutMe;","import React from 'react';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\n\nimport claire from '../images/claire.jpg';\n\nconst Contact: React.FC = () => {\n  \n  return (\n    <div>\n      <h1>Contact</h1>\n      <div className='component-div' style={{display: 'flex', justifyContent: 'space-around'}}>\n        <div style={{flex: 1, paddingLeft: '20px', paddingRight: '20px'}}>\n          <p>\n          I can easily be reached by message through <a href=\"https://www.linkedin.com/in/conorburke89/\" target=\"_blank\"rel=\"noopener noreferrer\" style={{fontWeight: 'bold', color: 'white'}}>LinkedIn<OpenInNewIcon style={{fontSize: 14}}/></a>, \n              but feel free to also e-mail me at \n              <a href=\"mailto:cjburke89@gmail.com\" style={{fontWeight: 'bold', color: 'white'}}> cjburke89@gmail.com</a>.\n          </p>\n          <p>\n          I am not currently looking for a job but I value continual networking so please feel free to connect.\n          </p> \n        </div>\n        <div className='picture-div' style={{flex: 1, maxWidth: '50%'}}>\n            <img className='me-pic' src={claire} alt='Wife.' style={{ maxWidth: '50%', border: '2px solid whitesmoke', borderRadius: '10px'}}/>\n        </div>\n      </div>\n      {/* <div className='component-div' style={{display: 'flex', justifyContent: 'space-around', alignItems: 'center', flexDirection: 'column'}}>\n        <div style={{flex: 1, paddingLeft: '20px', paddingRight: '20px'}}>\n          <p style={{textAlign: 'center'}}>\n              I can easily be reached by message through <a href=\"https://www.linkedin.com/in/conorburke89/\" target=\"_blank\"rel=\"noopener noreferrer\" style={{fontWeight: 'bold', color: 'white'}}>LinkedIn<OpenInNewIcon style={{fontSize: 14}}/></a>, \n              but feel free to also e-mail me at \n              <a href=\"mailto:cjburke89@gmail.com\" style={{fontWeight: 'bold', color: 'white'}}> cjburke89@gmail.com</a>.\n          </p>\n          <p style={{textAlign: 'center'}}>\n            Having just completed my MSCS from Georgia Tech, my family and I will be moving to the\n            northern Virginia area in March 2022 and I will be looking to start a new job at that point.\n            I am interested in full time positions, ideally that are cleared and involve working with big data.\n            I am particularly interested in aerospace companies and/or positions that involve cloud and containerization technologies. \n          </p>\n        </div>\n        <div className='picture-div' style={{flex: 1, maxWidth: '100%'}}>\n            <img className='me-pic' src={claire} alt='Wife.' style={{ maxWidth: '50%', border: '2px solid whitesmoke', borderRadius: '10px'}}/>\n        </div>\n      </div> */}\n    </div>\n  );\n}\n\nexport default Contact;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport magnetar from '../images/magnetar_tools_page.png';\nimport mancala from '../images/mancala.png';\nimport seespotgo from '../images/seespotgo.png';\nimport telescopes from '../images/telescopes.png';\nimport walter from '../images/walter.png';\nimport blacksmith from '../images/blacksmith.png';\nimport summersong from '../images/summerson2.png';\n\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: '28%',\n    minWidth: '300px',\n    margin: 20,\n    border: '2px solid whitesmoke', \n    borderRadius: '10px'\n  },\n});\n\nconst Projects: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <h1>Projects</h1>\n      <div style={{display: 'flex', justifyContent: 'space-around', flexWrap: 'wrap'}}>\n      <Card className={`${classes.card} project-card`}>\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              alt=\"Summersong Diagram\"\n              max-width=\"100%\"\n              image={summersong}\n              title=\"Summersong\"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                Summersong\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Summersong is a data analytics and processing platform. It creates predictive data models \n                based on custom data sets. It is written primarily in Java (Spring Boot) and Python, and leverages\n                Docker, Kafka, Redis, and multiple AWS resources.\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button size=\"small\" color=\"primary\">\n              <a href='https://www.youtube.com/embed/I9tnzZ_z-PQ' target='_blank' rel=\"noopener noreferrer\">Video Demo</a>\n            </Button>\n          </CardActions>\n        </Card>\n        <Card className={`${classes.card} project-card`}>\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              alt=\"Contemplative Reptile\"\n              max-width=\"100%\"\n              image={blacksmith}\n              title=\"Contemplative Reptile\"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                Reloto\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Reloto is an event-based microservice built using Kubernetes, TypeScript, MongoDB, and NATS\n                Streaming Server. It allows users to rent/loan tools and is the newer version of the Magnetar\n                project. It is hosted on Digital Ocean and is in active development. It will soon be reachable by\n                users at the domain reloto.app. It has an associated custom NPM module for shared resources.\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button size=\"small\" color=\"primary\">\n              <a href='https://reloto.app' target='_blank' rel=\"noopener noreferrer\">Website</a>\n            </Button>\n            <Button size=\"small\" color=\"primary\">\n              <a href='https://github.com/conorburke/reloto' target='_blank' rel=\"noopener noreferrer\">Github (Platform)</a>\n            </Button>\n            <Button size=\"small\" color=\"primary\">\n              <a href='https://github.com/conorburke/reloto-common' target='_blank' rel=\"noopener noreferrer\">Github (NPM Module)</a>\n            </Button>\n          </CardActions>\n        </Card>\n        <Card className={`${classes.card} project-card`}>\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              alt=\"Contemplative Reptile\"\n              width=\"100%\"\n              image={magnetar}\n              title=\"Contemplative Reptile\"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                Magnetar\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Magnetar is a tool renting/loaning platform. Built with a GraphQL Node backend, it has\n                a PWA frontend built with React/TypeScript (and a React Native app). Magnetar uses NGINX for load \n                balancing and Postgres for storage. It also incorporates the Stripe API as well as S3 for image\n                storage. Hosted on AWS. I custom wrote all the GraphQL resolvers for full CRUD capabilities.\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button size=\"small\" color=\"primary\">\n              <a href='http://magnetar-env.pjsnaganrf.us-east-2.elasticbeanstalk.com/' target='_blank' rel=\"noopener noreferrer\">Website</a>\n            </Button>\n            <Button size=\"small\" color=\"primary\">\n              <a href='https://github.com/conorburke/magnetar_platform' target='_blank' rel=\"noopener noreferrer\">Github (Platform)</a>\n            </Button>\n            <Button size=\"small\" color=\"primary\">\n              <a href='https://github.com/conorburke/magnetar_mobile' target='_blank' rel=\"noopener noreferrer\">Github (Mobile)</a>\n            </Button>\n          </CardActions>\n        </Card>\n        <Card className={`${classes.card} project-card`}>\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              alt=\"Contemplative Reptile\"\n              width=\"100%\"\n              image={mancala}\n              title=\"Contemplative Reptile\"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                Mancala AI\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Mancala AI is a recent project built in Python that I am currently developing to implement AI techniques\n                that I am studying. It has agents that implement Alpha-beta pruning / mini-max or a Monte Carlo algorithm to figure out the best moves given current game state. I plan to utilize Keras/TensorFlow in order allow it to learn. \n                Currently the agent I developed beats a novice player 99.8% of the time.\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button size=\"small\" color=\"primary\">\n              <a href='https://github.com/conorburke/mancala_ai' target='_blank' rel=\"noopener noreferrer\">Github</a>\n            </Button>\n          </CardActions>\n        </Card>\n        <Card className={`${classes.card} project-card`}>\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              alt=\"Contemplative Reptile\"\n              width=\"100%\"\n              image={walter}\n              title=\"Contemplative Reptile\"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                Walter's Notebook\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Walter's Notebook is a containerized microservice platform. Its main components are an ETL pipeline and\n                API (written in Go), datastore, and React frontend component. It pulls publicly available fantasy football \n                spreadsheets, processes and transforms them, and stores them for the API to serve. Hosted on\n                AWS, it has a CI/CD toolchain that deploys docker containers.\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button size=\"small\" color=\"primary\">\n              <a href='http://fantasy.us-east-2.elasticbeanstalk.com/' target='_blank' rel=\"noopener noreferrer\">Website</a>\n            </Button>\n            <Button size=\"small\" color=\"primary\">\n              <a href='https://github.com/conorburke/fantasy' target='_blank' rel=\"noopener noreferrer\">Github</a>\n            </Button>\n          </CardActions>\n        </Card>\n        <Card className={`${classes.card} project-card`}>\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              alt=\"Contemplative Reptile\"\n              width=\"100%\"\n              image={seespotgo}\n              title=\"Contemplative Reptile\"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                SeeSpotGo\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                SeeSpotGo is a Rails app that allows users to loan and rent parking spaces. The use case\n                is analogous to AirBnB but for parking spaces. In addition to that capability, the app\n                takes advantages of WebSockets to allow loaners and renters the ability to confirm details via chat rooms.\n                It has an intuitive searching function aided by Google Maps API.\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button size=\"small\" color=\"primary\">\n              <a href='http://seespotgo.herokuapp.com/' target='_blank' rel=\"noopener noreferrer\">Website</a>\n            </Button>\n            <Button size=\"small\" color=\"primary\">\n              <a href='https://github.com/conorburke/seespotgo' target='_blank' rel=\"noopener noreferrer\">Github</a>\n            </Button>\n          </CardActions>\n        </Card>\n        <Card className={`${classes.card} project-card`}>\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              alt=\"Contemplative Reptile\"\n              width=\"100%\"\n              image={telescopes}\n              title=\"Contemplative Reptile\"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                Telescopes Are Time Machines\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Telescopes Are Time Machines is a Rails app developed to provide a community forum for people \n                interested in astronomical events. It has a news feed bolstered by NASA's Twitter account,\n                and like SeeSpotGo it takes advantage of WebSockets to have multiple chat rooms. This allows\n                users to converse with those who share a love of astronomy.\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button size=\"small\" color=\"primary\">\n              <a href='http://telescopesaretimemachines.herokuapp.com/' target='_blank' rel=\"noopener noreferrer\">Website</a>\n            </Button>\n            <Button size=\"small\" color=\"primary\">\n              <a href='https://github.com/conorburke/telescopes-are-time-machines' target='_blank' rel=\"noopener noreferrer\">Github</a>\n            </Button>\n          </CardActions>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default Projects;\n","import React from \"react\";\n\nconst Video: React.FC = () => {\n\n    return (\n        <div className=\"video-responsive\">\n            <iframe\n            width=\"853\"\n            height=\"480\"\n            src={`https://www.youtube.com/embed/I9tnzZ_z-PQ`}\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n            title=\"Embedded youtube\"\n            />\n        </div>\n    )\n}\n\nexport default Video;","import React from 'react';\nimport Video from './Video';\n\nconst Home: React.FC = () => {\n\n  return (\n    <div>\n      <h1>Conor Burke</h1>\n      <h2>Software Engineer. Developer. MS in Computer Science.</h2>\n      <div className=\"icon-container icons\">\n          <a href=\"https://www.linkedin.com/in/conorburke89/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fab fa-linkedin fa-4x\"></i>\n          </a>\n          <a href=\"https://github.com/conorburke\" target=\"_blank\"rel=\"noopener noreferrer\">\n            <i className=\"fab fa-github fa-4x\"></i>\n          </a>\n      </div>\n      <Video />\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nconst Header: React.FC = () => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" style={{backgroundColor: 'transparent', color: '#f7f7f7'}}>\n        <Toolbar style={{display: 'flex', justifyContent: 'space-around'}}>\n          <Button color=\"inherit\" component={props => <Link to={'/'} {...props}/>}>Home</Button>\n          <Button color=\"inherit\" component={props => <Link to={'/projects'} {...props}/>}>Projects</Button>\n          <Button color=\"inherit\" component={props => <Link to={'/aboutme'} {...props}/>}>About Me</Button>\n          <Button color=\"inherit\" component={props => <Link to={'/contact'} {...props}/>}>Contact</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport Particles from 'react-particles-js';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport './App.css';\nimport AboutMe from './components/AboutMe';\nimport Contact from './components/Contact';\nimport Projects from './components/Projects';\nimport Home from './components/Home';\nimport Header from './components/Header';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 89,\n      density: {\n        enable: true,\n        value_area: 1000\n      }\n    },\n    color: {\n      value: \"#668daf\"\n    },\n    line_linked: {\n      color: \"#668daf\",\n    },\n  }\n}\n\nconst App: React.FC = () => {\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header />\n        <Route exact path='/' component={Home} />\n        <Route exact path='/projects' component={Projects} />\n        <Route exact path='/aboutme' component={AboutMe} />\n        <Route exact path='/contact' component={Contact} />\n        <Particles className=\"particles-js\" params={particlesOptions} />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}